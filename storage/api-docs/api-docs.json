{
    "openapi": "3.0.0",
    "info": {
        "title": "Jewelry API",
        "description": "API for Jewelry Management System",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and return access token",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdef123456..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Invalidate the current access token",
                "operationId": "ad65cbbd4e9f201619eae184a5961a98",
                "responses": {
                    "204": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-management/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get all customers",
                "description": "Retrieve a paginated list of all customers",
                "operationId": "2f715add6af7165ece41e81a3d101242",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer",
                "description": "Create a new customer account",
                "operationId": "45a30806b59b62bdd1eab852a1ec9cb9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "first_name",
                                    "last_name",
                                    "user_pass"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "customer@example.com"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "user_pass": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "zip": {
                                        "type": "string",
                                        "example": "10001"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer created successfully"
                                        },
                                        "customer": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-management/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get a specific customer",
                "description": "Retrieve detailed information about a specific customer",
                "operationId": "c7a9098a31693d5c8e36ed7115708654",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customer": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update a customer",
                "description": "Update an existing customer's information",
                "operationId": "b6436a5e2d6b10369dfc38f2ec60df9e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "first_name",
                                    "last_name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "customer@example.com"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "user_pass": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-15"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "VIP customer"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customer": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete a customer",
                "description": "Move a customer to trash (soft delete)",
                "operationId": "0bbfd56dc3a9fd721e8fcec7bf1024f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/options/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customers for dropdown",
                "description": "Retrieve a list of customers for dropdown/select options",
                "operationId": "5dd4f747a5f96190a7afa8f50c9b1b80",
                "responses": {
                    "200": {
                        "description": "Customers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customers": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-management/customers/statistics": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer statistics",
                "description": "Retrieve customer statistics and analytics",
                "operationId": "4515e4b772370f0e2209ec7ac365e079",
                "responses": {
                    "200": {
                        "description": "Customer statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_customers": {
                                            "type": "integer",
                                            "example": 150
                                        },
                                        "active_customers": {
                                            "type": "integer",
                                            "example": 120
                                        },
                                        "new_customers_this_month": {
                                            "type": "integer",
                                            "example": 25
                                        },
                                        "total_revenue": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 125000
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-management/customers/export": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Export customers",
                "description": "Export customers data in various formats (CSV, Excel, PDF)",
                "operationId": "d873d018bfb799ddbd4ba5c345f68939",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "excel",
                                "pdf"
                            ],
                            "example": "csv"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Export file generated successfully",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-management/customers/next-code": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get next customer code",
                "description": "Generate the next available customer code",
                "operationId": "9ef130acf0d9887a42bb517b4384e7ef",
                "responses": {
                    "200": {
                        "description": "Next customer code generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "next_code": {
                                            "type": "string",
                                            "example": "CUST-2024-001"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-portal/login": {
            "post": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Customer login",
                "description": "Authenticate customer and return access token",
                "operationId": "38e41b00a947870c21943220171ef54c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "customer@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/customer-portal/forgot-password": {
            "post": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Customer forgot password",
                "description": "Send password reset email to customer",
                "operationId": "5aaa74bbc07c0f47293cd0c0d3b5f6f2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "customer@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your temporary password has been sent to your registered email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/customer-portal/dashboard": {
            "get": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Get customer dashboard overview",
                "description": "Retrieve customer dashboard statistics and overview",
                "operationId": "0a331d0429260796136ba4a210690378",
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_invoices": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total_paid": {
                                            "type": "number",
                                            "example": 2500
                                        },
                                        "outstanding_balance": {
                                            "type": "number",
                                            "example": 1500
                                        },
                                        "overdue_invoices": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "upcoming_dues": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-portal/invoices": {
            "get": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Get customer invoices",
                "description": "Retrieve paginated list of customer invoices with filters",
                "operationId": "4a683e0cf987a22f9bb4187ed7bb1e0b",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for invoice number or notes",
                        "schema": {
                            "type": "string",
                            "example": "INV-2024"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by payment status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "partial",
                                "fully_paid",
                                "overdue"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoices retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 45
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-portal/invoices/{id}": {
            "get": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Get single invoice details",
                "description": "Retrieve detailed information about a specific invoice",
                "operationId": "3dcb3ba5a9e9a756aa2b9691056c62db",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-portal/invoices/{id}/pdf": {
            "get": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Download invoice PDF",
                "description": "Download invoice as PDF file",
                "operationId": "efba7bee75ae243ce397d7e8fbcdffaf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF file downloaded successfully",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-portal/payments": {
            "get": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Get payment submissions",
                "description": "Retrieve paginated list of customer payment submissions",
                "operationId": "2cd2518e39b77b1d96afa64b74056a93",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment submissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 25
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Submit payment",
                "description": "Submit a payment with receipt images for review",
                "operationId": "ba9a6adabfc520e89ade130a02c35f8c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "invoice_id",
                                    "amount_paid",
                                    "expected_amount",
                                    "reference_number",
                                    "payment_method"
                                ],
                                "properties": {
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount_paid": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "expected_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "reference_number": {
                                        "type": "string",
                                        "example": "REF123456"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "Bank Transfer"
                                    },
                                    "receipt_images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Payment notes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment submission successful. You will receive an email notification once it is reviewed."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customer-portal/profile": {
            "get": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Get customer profile",
                "description": "Retrieve authenticated customer profile information",
                "operationId": "18c286808397b230891d6a0a02f30b54",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer Portal"
                ],
                "summary": "Update customer profile",
                "description": "Update authenticated customer profile information",
                "operationId": "4c8a8784e77f20201d534799e8d8ba48",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_login",
                                    "user_email"
                                ],
                                "properties": {
                                    "user_login": {
                                        "type": "string",
                                        "example": "updated_username"
                                    },
                                    "user_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "updated@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City, State"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/dashboard/overview": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get dashboard overview data",
                "description": "Retrieve comprehensive dashboard statistics and metrics",
                "operationId": "aa916ea9a152b88ff8d02de260dd3390",
                "responses": {
                    "200": {
                        "description": "Dashboard overview data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_revenue": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 125000
                                        },
                                        "total_customers": {
                                            "type": "integer",
                                            "example": 150
                                        },
                                        "total_invoices": {
                                            "type": "integer",
                                            "example": 75
                                        },
                                        "pending_payments": {
                                            "type": "integer",
                                            "example": 12
                                        },
                                        "recent_activities": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/discounts": {
            "get": {
                "tags": [
                    "Discounts"
                ],
                "summary": "Get all discounts",
                "description": "Retrieve a paginated list of all discounts",
                "operationId": "f3450ed9a20fd2e33a97ce8ace265d39",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discounts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Discounts"
                ],
                "summary": "Create a new discount",
                "description": "Create a new discount with code, type, and value",
                "operationId": "2b6844dd44c1c92d5973f96c32d3576c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code",
                                    "type",
                                    "value",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Summer Sale 2024"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "SUMMER2024"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed"
                                        ],
                                        "example": "percentage"
                                    },
                                    "value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-06-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-31"
                                    },
                                    "min_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "max_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1000
                                    },
                                    "usage_limit": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Summer discount for all customers"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Discount created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "discount": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/discounts/{id}": {
            "get": {
                "tags": [
                    "Discounts"
                ],
                "summary": "Get a specific discount",
                "description": "Retrieve detailed information about a specific discount",
                "operationId": "0447d22b02d4fdf325d7f6b12381d6dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Discount ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discount retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "discount": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Discount not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Discounts"
                ],
                "summary": "Update a discount",
                "description": "Update an existing discount's information",
                "operationId": "0f2d6c13ff7b281d81e9318949f1468c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Discount ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code",
                                    "type",
                                    "value",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Summer Sale 2024 Updated"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "SUMMER2024"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed"
                                        ],
                                        "example": "percentage"
                                    },
                                    "value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 20
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-06-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-31"
                                    },
                                    "min_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150
                                    },
                                    "max_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2000
                                    },
                                    "usage_limit": {
                                        "type": "integer",
                                        "example": 200
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated summer discount"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Discount updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "discount": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Discount not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Discounts"
                ],
                "summary": "Delete a discount",
                "description": "Move a discount to trash (soft delete)",
                "operationId": "de7f5361317f19692968d60b6b6429a0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Discount ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discount moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Discount not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/options/discounts": {
            "get": {
                "tags": [
                    "Discounts"
                ],
                "summary": "Get active discounts for dropdown",
                "description": "Retrieve a list of active discounts for dropdown/select options",
                "operationId": "6165b825edc36cb8f82b981e986c7e4a",
                "responses": {
                    "200": {
                        "description": "Active discounts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "discounts": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Summer Sale 2024"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "SUMMER2024"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "percentage"
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "example": 15
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/discounts/validate-code": {
            "post": {
                "tags": [
                    "Discounts"
                ],
                "summary": "Validate discount code",
                "description": "Check if a discount code is valid and get its details",
                "operationId": "132043f1637d644ce116bd084e3b8ddc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "SUMMER2024"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Discount code is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "valid": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "discount": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Summer Sale 2024"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "SUMMER2024"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "percentage"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Discount code is invalid or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "valid": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Discount code is invalid or expired"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/fees": {
            "get": {
                "tags": [
                    "Fees"
                ],
                "summary": "Get all fees",
                "description": "Retrieve a paginated list of all fees",
                "operationId": "2de7020cadb8857fb29ca4b27336496c",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fees retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Fees"
                ],
                "summary": "Create a new fee",
                "description": "Create a new fee configuration",
                "operationId": "0fd953ad2e3f3ec1ae5c0af3a9cd2718",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "amount",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Processing Fee"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "fixed",
                                            "percentage"
                                        ],
                                        "example": "fixed"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Processing fee for all transactions"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Fee created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "fee": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/fees/{id}": {
            "get": {
                "tags": [
                    "Fees"
                ],
                "summary": "Get a specific fee",
                "description": "Retrieve detailed information about a specific fee",
                "operationId": "ec62de9e4d06fdbcd6d9e756b3d26ccf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Fee ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fee retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "fee": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Fee not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Fees"
                ],
                "summary": "Update a fee",
                "description": "Update an existing fee configuration",
                "operationId": "feaba0857b015878834eeac3168673a5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Fee ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "amount",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Processing Fee"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "fixed",
                                            "percentage"
                                        ],
                                        "example": "fixed"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated processing fee"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Fee updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "fee": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Fee not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Fees"
                ],
                "summary": "Delete a fee",
                "description": "Move a fee to trash (soft delete)",
                "operationId": "463d4b93517d32048e20105ad60adad1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Fee ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fee moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Fee not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/options/fees": {
            "get": {
                "tags": [
                    "Fees"
                ],
                "summary": "Get active fees for dropdown",
                "description": "Retrieve a list of active fees for dropdown/select options",
                "operationId": "036b0b6f11bdb5ab5decedcc434be968",
                "responses": {
                    "200": {
                        "description": "Active fees retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "fees": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Processing Fee"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "example": 25
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "fixed"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/invoice-management/invoices": {
            "get": {
                "tags": [
                    "Invoice Management"
                ],
                "summary": "Get all invoices",
                "description": "Retrieve a paginated list of all invoices",
                "operationId": "376e704a23495e73e232b251c02e082e",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoices retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Invoice Management"
                ],
                "summary": "Create a new invoice",
                "description": "Create a new invoice with products and customer information",
                "operationId": "19adfa98e0b55cb8b4f3cc808d5fe8e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id",
                                    "products"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "invoice_number": {
                                        "type": "string",
                                        "example": "INV-2024-001"
                                    },
                                    "issue_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-02-15"
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Gold Ring"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "18k Gold Ring"
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "unit_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 500
                                                },
                                                "tax_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "discount_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Special instructions"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Invoice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice created successfully"
                                        },
                                        "invoice": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/invoice-management/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoice Management"
                ],
                "summary": "Get a specific invoice",
                "description": "Retrieve detailed information about a specific invoice",
                "operationId": "dae69d86555c5ca3e33ed6a2ebe9386b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "invoice": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Invoice Management"
                ],
                "summary": "Update an invoice",
                "description": "Update an existing invoice with products and customer information",
                "operationId": "9e83db8ffc3b3c4b40cec14210c11570",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id",
                                    "products"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "invoice_number": {
                                        "type": "string",
                                        "example": "INV-2024-001"
                                    },
                                    "issue_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-02-15"
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Gold Ring"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "18k Gold Ring"
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "unit_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 500
                                                },
                                                "tax_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "discount_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Updated instructions"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "invoice": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Invoice Management"
                ],
                "summary": "Delete an invoice",
                "description": "Move an invoice to trash (soft delete)",
                "operationId": "611148745ffdf8e21c32d1070baa588e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/invoice-management/invoices/{id}/cancel": {
            "patch": {
                "tags": [
                    "Invoice Management"
                ],
                "summary": "Cancel an invoice",
                "description": "Cancel an existing invoice (only if not paid)",
                "operationId": "33ee3760198dcc43031b41bf472996c6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice has been cancelled."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot cancel paid invoice"
                    },
                    "404": {
                        "description": "Invoice not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/invoice-management/invoices/{id}/pdf": {
            "get": {
                "tags": [
                    "Invoice Management"
                ],
                "summary": "Generate invoice PDF",
                "description": "Generate and download invoice as PDF",
                "operationId": "a608831fb3106d0445b3ecf1ce637caf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF generated successfully",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/invoice-management/invoices/{id}/send-email": {
            "post": {
                "tags": [
                    "Invoice Management"
                ],
                "summary": "Send invoice via email",
                "description": "Send invoice to customer via email with PDF attachment",
                "operationId": "a0b0c50df44fd2e375cc56d970c573bb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice has been sent via email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/navigation-management/navigations": {
            "get": {
                "tags": [
                    "Navigation"
                ],
                "summary": "Get all navigation items",
                "description": "Retrieve a paginated list of all navigation items",
                "operationId": "ae1aed450a2d869ab22df338222cd869",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Navigation items retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Navigation"
                ],
                "summary": "Create a new navigation item",
                "description": "Create a new navigation menu item",
                "operationId": "1d45b23c38b12a3935fc0b253f76aedb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "url"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dashboard"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "/dashboard"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "fas fa-home"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Navigation item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "navigation": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/navigation-management/navigations/{id}": {
            "get": {
                "tags": [
                    "Navigation"
                ],
                "summary": "Get a specific navigation item",
                "description": "Retrieve detailed information about a specific navigation item",
                "operationId": "dcde011e816e8eb10a4018df3b8ad12e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Navigation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Navigation item retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "navigation": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Navigation item not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Navigation"
                ],
                "summary": "Update a navigation item",
                "description": "Update an existing navigation menu item",
                "operationId": "c8be1511e918198d552f6c4dbeaf7004",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Navigation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "url"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Dashboard"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "/updated-dashboard"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "fas fa-chart-line"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Navigation item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "navigation": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Navigation item not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Navigation"
                ],
                "summary": "Delete a navigation item",
                "description": "Move a navigation item to trash (soft delete)",
                "operationId": "a439dd3334a185d5072de522bb5fda09",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Navigation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Navigation item moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Navigation item not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/navigation-management/navigations/{id}/sub-navigations": {
            "get": {
                "tags": [
                    "Navigation"
                ],
                "summary": "Get sub-navigations",
                "description": "Retrieve sub-navigation items for a parent navigation",
                "operationId": "6ab4634d71069a38a655f5adb4b03649",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parent Navigation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sub-navigations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "sub_navigations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Navigation item not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/navigation-management/routes": {
            "get": {
                "tags": [
                    "Navigation"
                ],
                "summary": "Get navigation routes",
                "description": "Retrieve all available navigation routes",
                "operationId": "7f34293b345fb3a6e4be93399b692b1b",
                "responses": {
                    "200": {
                        "description": "Routes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "routes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payment-management/payments": {
            "get": {
                "tags": [
                    "Payment Management"
                ],
                "summary": "Get all payments",
                "description": "Retrieve a paginated list of all payments",
                "operationId": "e3f2da0a938ec8ab531df3ec6f1e8cea",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payment Management"
                ],
                "summary": "Create a new payment",
                "description": "Create a new payment record with receipt images",
                "operationId": "912cc5671fd22afdff66de4b561719b6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "invoice_id",
                                    "amount",
                                    "payment_method_id"
                                ],
                                "properties": {
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "payment_method_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "reference_number": {
                                        "type": "string",
                                        "example": "REF123456"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Payment notes"
                                    },
                                    "receipt_images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment created successfully"
                                        },
                                        "payment": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payment-management/payments/{id}": {
            "get": {
                "tags": [
                    "Payment Management"
                ],
                "summary": "Get a specific payment",
                "description": "Retrieve detailed information about a specific payment",
                "operationId": "c1dc1bb2cb44f23a23a00c3de8eae884",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Payment Management"
                ],
                "summary": "Update a payment",
                "description": "Update an existing payment record",
                "operationId": "a606befd0eac38d63e87d23b1c77b610",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "invoice_id",
                                    "amount",
                                    "payment_method_id"
                                ],
                                "properties": {
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "payment_method_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "reference_number": {
                                        "type": "string",
                                        "example": "REF123456"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Updated payment notes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payment Management"
                ],
                "summary": "Delete a payment",
                "description": "Move a payment to trash (soft delete)",
                "operationId": "f5c25017781b540ecd15977ae1493e41",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payment-management/payments/{id}/confirm": {
            "patch": {
                "tags": [
                    "Payment Management"
                ],
                "summary": "Confirm a payment",
                "description": "Confirm an approved payment and mark payment schedules as paid",
                "operationId": "987b6713d7426a1760a8fc43040e61f2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "selected_schedules": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment has been confirmed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Only approved payments can be confirmed"
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payment-management/payments/{id}/approve": {
            "patch": {
                "tags": [
                    "Payment Management"
                ],
                "summary": "Approve a payment",
                "description": "Approve a pending payment submission",
                "operationId": "d9c395d6ade124c639eb7ae775d2efd5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment approved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment has been approved."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Only pending payments can be approved"
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payment-management/payments/{id}/reject": {
            "patch": {
                "tags": [
                    "Payment Management"
                ],
                "summary": "Reject a payment",
                "description": "Reject a pending payment submission with reason",
                "operationId": "fd2360fb65d9c4b550e44e9ade91a74b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rejection_reason"
                                ],
                                "properties": {
                                    "rejection_reason": {
                                        "type": "string",
                                        "example": "Invalid receipt or insufficient documentation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment has been rejected."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Only pending payments can be rejected"
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/payment-methods": {
            "get": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Get all payment methods",
                "description": "Retrieve a paginated list of all payment methods",
                "operationId": "fb4711546869f5555e061774d1457d44",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment methods retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Create a new payment method",
                "description": "Create a new payment method configuration",
                "operationId": "6f4cdb193bb28f0bafc28e2f0bdce4a6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Credit Card"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "card"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Credit card payments"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "requires_receipt": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment method created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_method": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/payment-methods/{id}": {
            "get": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Get a specific payment method",
                "description": "Retrieve detailed information about a specific payment method",
                "operationId": "b6f145e3b8017a8be8e938a32c13922b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment Method ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_method": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Update a payment method",
                "description": "Update an existing payment method configuration",
                "operationId": "2a63ebc2217fbfc010d770c302e6cc1d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment Method ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Credit Card"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "card"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated credit card payments"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "requires_receipt": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment method updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_method": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Delete a payment method",
                "description": "Move a payment method to trash (soft delete)",
                "operationId": "a353ead72e2319fa788e255a8451a557",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment Method ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/options/payment-methods": {
            "get": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Get active payment methods for dropdown",
                "description": "Retrieve a list of active payment methods for dropdown/select options",
                "operationId": "c00390109e7a7e4f1292d65919614590",
                "responses": {
                    "200": {
                        "description": "Active payment methods retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_methods": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Credit Card"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "card"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Credit card payments"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/payment-terms": {
            "get": {
                "tags": [
                    "Payment Terms"
                ],
                "summary": "Get all payment terms",
                "description": "Retrieve a paginated list of all payment terms",
                "operationId": "e1dd88b2cddfa51bf3bb2a79b1ed43a8",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment terms retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payment Terms"
                ],
                "summary": "Create a new payment term",
                "description": "Create a new payment term with schedules",
                "operationId": "b9e09ece72ad4f84788ec89bf80e7fd0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Monthly Payment"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Monthly payment schedule"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "schedules": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "payment_order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                },
                                                "days_from_invoice": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "First payment"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment term created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_term": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/payment-terms/{id}": {
            "get": {
                "tags": [
                    "Payment Terms"
                ],
                "summary": "Get a specific payment term",
                "description": "Retrieve detailed information about a specific payment term",
                "operationId": "07264763e7e2ff2effb83f409ae2ba43",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment Term ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment term retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_term": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment term not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Payment Terms"
                ],
                "summary": "Update a payment term",
                "description": "Update an existing payment term with schedules",
                "operationId": "7d61fa210d1ab57099874168ca94815d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment Term ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Monthly Payment"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated monthly payment schedule"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "schedules": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "payment_order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 60
                                                },
                                                "days_from_invoice": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated first payment"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment term updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_term": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment term not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payment Terms"
                ],
                "summary": "Delete a payment term",
                "description": "Move a payment term to trash (soft delete)",
                "operationId": "1a115d0524f1ae9687aa5bbe50fbe3d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment Term ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment term moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment term not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/options/payment-terms": {
            "get": {
                "tags": [
                    "Payment Terms"
                ],
                "summary": "Get active payment terms for dropdown",
                "description": "Retrieve a list of active payment terms for dropdown/select options",
                "operationId": "8223c13698cb198f3de2e6c88e4ee870",
                "responses": {
                    "200": {
                        "description": "Active payment terms retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_terms": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Monthly Payment"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Monthly payment schedule"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/payment-terms/generate-equal-schedule": {
            "post": {
                "tags": [
                    "Payment Terms"
                ],
                "summary": "Generate equal payment schedule",
                "description": "Generate equal monthly payment schedule based on term months and percentage",
                "operationId": "05c9b0b08e9829738cd8bc9e14f16c56",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_months",
                                    "remaining_percentage"
                                ],
                                "properties": {
                                    "term_months": {
                                        "description": "Number of months for payment term",
                                        "type": "integer",
                                        "example": 6
                                    },
                                    "remaining_percentage": {
                                        "description": "Remaining percentage to be paid",
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equal payment schedule generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "schedules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Generated 6 equal monthly payments of 16.67% each"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/payment-terms/{id}/validate-completeness": {
            "get": {
                "tags": [
                    "Payment Terms"
                ],
                "summary": "Validate payment term completeness",
                "description": "Validate if a payment term has complete and valid schedules",
                "operationId": "fd86549c8ed93a76e105643ddffa7d4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment Term ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment term validation completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "validation": {
                                            "properties": {
                                                "is_complete": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "total_percentage": {
                                                    "type": "number",
                                                    "example": 100
                                                },
                                                "missing_percentage": {
                                                    "type": "number",
                                                    "example": 0
                                                },
                                                "issues": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid payment term"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user-management/roles": {
            "get": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Get all roles",
                "description": "Retrieve a paginated list of all roles",
                "operationId": "8666cbc208adced7cbeb541993ac72e6",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Create a new role",
                "description": "Create a new role with permissions",
                "operationId": "b007f0902cd4eae58a5b3773e085eac3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Administrator role"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user-management/roles/{id}": {
            "get": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Get a specific role",
                "description": "Retrieve detailed information about a specific role",
                "operationId": "7545f08cb0105527c202691ccf53c51b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Update a role",
                "description": "Update an existing role with permissions",
                "operationId": "e05acb3bbb18486d842c65afcae64aae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "updated_admin"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated administrator role"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Delete a role",
                "description": "Move a role to trash (soft delete)",
                "operationId": "0a91d022ec5a4861f3e1dc5ac1689a15",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/taxes": {
            "get": {
                "tags": [
                    "Tax Management"
                ],
                "summary": "Get all taxes",
                "description": "Retrieve a paginated list of all taxes",
                "operationId": "fc667680c2c4a22921f0e7e0a7a7117b",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Taxes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tax Management"
                ],
                "summary": "Create a new tax",
                "description": "Create a new tax rate configuration",
                "operationId": "b7e40a448f877bf0c4d0f7c4602f9d7c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "rate"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "VAT"
                                    },
                                    "rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Value Added Tax"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tax created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tax": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/financial-management/taxes/{id}": {
            "get": {
                "tags": [
                    "Tax Management"
                ],
                "summary": "Get a specific tax",
                "description": "Retrieve detailed information about a specific tax",
                "operationId": "d03174bddbf24d9d554c405a7b99082f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tax": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tax Management"
                ],
                "summary": "Update a tax",
                "description": "Update an existing tax rate configuration",
                "operationId": "639dac5da09c9803745f495f0794ca89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "rate"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated VAT"
                                    },
                                    "rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 18
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated Value Added Tax"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tax updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tax": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tax Management"
                ],
                "summary": "Delete a tax",
                "description": "Move a tax to trash (soft delete)",
                "operationId": "1234a184fbbc736463066b1c0eea6a45",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/options/taxes": {
            "get": {
                "tags": [
                    "Tax Management"
                ],
                "summary": "Get active taxes for dropdown",
                "description": "Retrieve a list of active taxes for dropdown/select options",
                "operationId": "ea45dcf868098f9ff60f39d376915363",
                "responses": {
                    "200": {
                        "description": "Active taxes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "taxes": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "VAT"
                                                    },
                                                    "rate": {
                                                        "type": "number",
                                                        "example": 15
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Value Added Tax"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user-management/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get all users",
                "description": "Retrieve a paginated list of all users",
                "operationId": "742ade1b506fa66e6f20dc4bdf8f284b",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create a new user",
                "description": "Create a new user account with role assignment",
                "operationId": "00321d77ea7ed989f6a1c1933a775d2b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_login",
                                    "user_email",
                                    "user_pass",
                                    "first_name",
                                    "last_name"
                                ],
                                "properties": {
                                    "user_login": {
                                        "type": "string",
                                        "example": "john_doe"
                                    },
                                    "user_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "user_pass": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "user_role": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user-management/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get a specific user",
                "description": "Retrieve detailed information about a specific user",
                "operationId": "db375f2b1d216112d9e340261336b84b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update a user",
                "description": "Update an existing user account with role assignment",
                "operationId": "3aa7bbe38291e5f438d5373f97c2d137",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_login",
                                    "user_email"
                                ],
                                "properties": {
                                    "user_login": {
                                        "type": "string",
                                        "example": "updated_john_doe"
                                    },
                                    "user_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "updated@example.com"
                                    },
                                    "user_pass": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "Updated John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Updated Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "user_status": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_role": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 2
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete a user",
                "description": "Move a user to trash (soft delete)",
                "operationId": "786896e4e60e99a6ad09cf8fd2202b2c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User moved to trash successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource has been moved to trash."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user-management/users/bulk-change-password": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Bulk change user passwords",
                "description": "Change passwords for multiple users at once",
                "operationId": "72bad2f874276bf2463f2b129d8dd159",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids"
                                ],
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Passwords changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Passwords have been changed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user-management/users/bulk-change-role": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Bulk change user roles",
                "description": "Change roles for multiple users at once",
                "operationId": "12f98ea75bda3828537ba5543f259ae7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids",
                                    "role"
                                ],
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "role": {
                                        "description": "New role ID",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roles changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Roles have been changed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user-management/profile": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user profile",
                "description": "Update the authenticated user's profile information",
                "operationId": "c93ed614f44a970bde9efe4e22706993",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_login",
                                    "user_email"
                                ],
                                "properties": {
                                    "user_login": {
                                        "type": "string",
                                        "example": "updated_username"
                                    },
                                    "user_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "updated@example.com"
                                    },
                                    "user_pass": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "Updated First Name"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Updated Last Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile has been updated successfully."
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user-management/user": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get current user",
                "description": "Retrieve the authenticated user's information",
                "operationId": "713da82d1d31de0ecb1ce9d535aeb77b",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_login": {
                                            "type": "string",
                                            "example": "john_doe"
                                        },
                                        "user_email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "user_status": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_role": {
                                            "type": "object"
                                        },
                                        "user_details": {
                                            "type": "object"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/options/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get users for dropdown",
                "description": "Retrieve a list of active users for dropdown/select options",
                "operationId": "04e40000fc6d8e85298d61414a4da37f",
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_login": {
                                                        "type": "string",
                                                        "example": "john_doe"
                                                    },
                                                    "user_email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Customers",
            "description": "Customer management endpoints"
        },
        {
            "name": "Customer Portal",
            "description": "Customer portal endpoints for self-service"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard analytics and statistics endpoints"
        },
        {
            "name": "Discounts",
            "description": "Discount management endpoints"
        },
        {
            "name": "Fees",
            "description": "Fee management endpoints"
        },
        {
            "name": "Invoice Management",
            "description": "Invoice management endpoints"
        },
        {
            "name": "Navigation",
            "description": "Navigation management endpoints"
        },
        {
            "name": "Payment Management",
            "description": "Payment management endpoints"
        },
        {
            "name": "Payment Methods",
            "description": "Payment method management endpoints"
        },
        {
            "name": "Payment Terms",
            "description": "Payment term management endpoints"
        },
        {
            "name": "Role Management",
            "description": "Role management endpoints"
        },
        {
            "name": "Tax Management",
            "description": "Tax management endpoints"
        },
        {
            "name": "User Management",
            "description": "User management endpoints"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}